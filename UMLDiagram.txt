[Model|
+generateCharacter(Utility::Race race, Utility::Loc l = NEEDS_RANDOM): Entity *;
+generatePlayer(Utility::Race race) : Entity *;
+generateTile(Utility::Terrain t) : Tile *;
+generateLayout(vector\<Utility::Terrain\> layout) : void;
+playerMove(Utility::Direction d) : bool;
+playerUse(Utility::Direction d) : bool;
+playerAttack(Utility::Direction d) : bool;
+setEnemyMovement(bool move) : void;
+restart() : void;
+quit() : void;
+state() : State &;
+render() : void;
+indiceFromLoc(Utility::Loc l) : int] ++-> [<<interface>>;Entity|
    +getHp() : int;
    +getAtk() : int;
    +getDef() : int;
    +setHp(int hp) : void;
    +setAtk(int atk) : void;
    +setDef(int def) : void;
    +move() : Utility::Direction;
    +defend(int atk) : int;
    +attack() : int;
    +interacted() : Utility::Effect ;
    +collected() : Utility::Effect ;
    +permeable() : bool;
    +draw() : char;]
[Model] ++-> [Tile]
[Model] <- [View]
[Model] <- [Controller|
+parseLayout(string file) : void;
+parseNewGame(char c) : void;
+parseTurn(string cmd) : void;]

[View] ^ [ConcreteView]

[Entity] ^ [<<interface>>;Character|+permeable();+move();+interact()]

[Character] ^ [Drow]
[Character] ^ [Dragon]
[Character] ^ [Dwarf]
[Character] ^ [Elf]
[Character] ^ [Goblin]
[Character] ^ [Halfling]
[Character] ^ [Human]
[Character] ^ [Merchant]
[Character] ^ [Orc]
[Character] ^ [Shade]
[Character] ^ [Troll]
[Character] ^ [Vampire]
[Character] ^ [Decorator]

[Decorator] ^ [Boost Atk]
[Decorator] ^ [Boost Def]
[Decorator] ^ [Wound Atk]
[Decorator] ^ [Wound Def]

[Entity] ^ [<<interface>>;Item|
+permeable();
+collected();
+interact()]

[Item] ^ [Potion]
[Item] ^ [Gold]
[Item] ^ [Stairs]

[Tile] ^ [Empty]
[Tile] ^ [Passageway]
[Tile] ^ [Door]
[Tile] ^ [HWall]
[Tile] ^ [VWall]
[Tile] ^ [Floor]